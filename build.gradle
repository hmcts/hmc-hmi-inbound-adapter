plugins {
  id 'application'
  id 'idea'
  id 'jacoco'
  id 'com.github.ben-manes.versions' version '0.52.0'
  id 'com.github.spacialcircumstances.gradle-cucumber-reporting' version '0.1.25'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'org.owasp.dependencycheck' version '11.1.1'
  id 'org.sonarqube' version '6.2.0.5505'
  id 'org.springframework.boot' version '3.3.12'
  id 'uk.gov.hmcts.java' version '0.12.66'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

application {
  mainClass = 'uk.gov.hmcts.reform.hmc.Application'
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }
}

idea {
  module {
    // config to allow Intellij to mark test source and resource files correctly to help linting tools
    testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
    testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
    testResourceDirs += project.sourceSets.functionalTest.resources.srcDirs
    testResourceDirs += project.sourceSets.integrationTest.resources.srcDirs
  }
}

tasks.withType(JavaCompile) {
  // options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(Test) {
    useJUnitPlatform()
    
    testLogging {
        exceptionFormat = 'full'
    }
}

test {
  generateCucumberReports.enabled = false
  failFast = true
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath

  generateCucumberReports.enabled = false

  doLast {
    generateCucumberReports.enabled = true

    javaexec {
      environment "OAUTH2_CLIENT_SECRET", "DUMMY"
      main = "uk.gov.hmcts.reform.hmc.hmi.befta.InboundAdapterBeftaMain"
      classpath += sourceSets.functionalTest.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
      args = [
        '--threads', '10',
        '--plugin', "json:${rootDir}/target/cucumber.json",
        '--plugin', "junit:${buildDir}/test-results/functional/cucumber.xml",
        '--tags', 'not @Ignore',
        '--glue', 'uk.gov.hmcts.befta.player', 'src/functionalTest/resources/features'
      ]
      // '--add-opens=...' added to suppress 'WARNING: An illegal reflective access operation has occurred' in uk.gov.hmcts.befta.util.CucumberStepAnnotationUtils
      jvmArgs = [ '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED' ]
    }
  }

  finalizedBy {
    generateCucumberReports {
      doLast{
        delete "${rootDir}/BEFTA Report for Functional Tests/"
        new File("${rootDir}/BEFTA Report for Functional Tests").mkdirs()
        file("${rootDir}/target/cucumber/cucumber-html-reports").renameTo(file("${rootDir}/BEFTA Report for Functional Tests"))
        logger.quiet("Functional test report moved to ---> file://${rootDir}/BEFTA%20Report%20for%20Functional%20Tests/overview-features.html")
      }
    }
  }
  outputs.upToDateWhen { false }
}

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
}

task smoke(type: Test) {
  description = 'Executes smoke tests against an the HMC HMI Inbound Adapter API instance just deployed'
  dependsOn functionalTestClasses

  new File("$buildDir/test-results/test").mkdirs()
  copy {
    from "src/functional/resources/DummyTest.xml"
    into "$buildDir/test-results/test"
  }

  doLast {
    generateCucumberReports.enabled = true
    javaexec {
      environment "OAUTH2_CLIENT_SECRET", "DUMMY"
      main = "uk.gov.hmcts.reform.hmc.hmi.befta.InboundAdapterBeftaMain"
      classpath += sourceSets.functionalTest.runtimeClasspath + sourceSets.main.output + sourceSets.test.output
      args = [
        '--threads', '10',
        '--plugin', "json:${rootDir}/target/cucumber.json",
        '--plugin', "junit:${buildDir}/test-results/functional/cucumber.xml",
        '--tags', '@Smoke and not @Ignore',
        '--glue', 'uk.gov.hmcts.befta.player', 'src/functionalTest/resources/features'
      ]
      // '--add-opens=...' added to suppress 'WARNING: An illegal reflective access operation has occurred' in uk.gov.hmcts.befta.util.CucumberStepAnnotationUtils
      jvmArgs = [ '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED' ]
    }
  }

  finalizedBy {
    generateCucumberReports {
      doLast{
        delete "${rootDir}/BEFTA Report for Smoke Tests/"
        new File("${rootDir}/BEFTA Report for Smoke Tests").mkdirs()
        file("${rootDir}/target/cucumber/cucumber-html-reports").renameTo(file("${rootDir}/BEFTA Report for Smoke Tests"))

        logger.quiet("Smoke test report moved to ---> file://${rootDir}/BEFTA%20Report%20for%20Smoke%20Tests/overview-features.html")
      }
    }
  }

  outputs.upToDateWhen { false }
}

task customCleanBeftaReports(type:Delete) {
  delete "${rootDir}/BEFTA Report for Smoke Tests/"
  delete "${rootDir}/BEFTA Report for Functional Tests/"
  delete "${rootDir}/target/cucumber"
  delete "${rootDir}/target/cucumber.json"
}
tasks.clean.dependsOn(tasks.customCleanBeftaReports)

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.required = true
    csv.required = false
    xml.outputLocation = file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

sonarqube {
  properties {
    property "sonar.projectName", "Reform :: hmc-hmi-inbound-adapter"
    property "sonar.projectKey", "uk.gov.hmcts.reform:hmc-hmi-inbound-adapter"
    property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/hmc/Application.java," +
      "src/main/java/uk/gov/hmcts/reform/hmc/config/MessageReceiverConfiguration.java,**/config/SecurityConfiguration.java"
  }
}

ext {
  set('springCloudVersion', '2024.0.0')
  set('spring-framework.version', '6.2.1')
  set('spring-security.version', '6.4.2')
  set('jackson.version', '2.18.2')
  set('snakeyaml.version', '2.3')
  jetty           = '12.0.23'
  logback         = '1.5.18'
  lombok          = '1.18.38'
  mapstruct       = '1.6.3'
  tomcatEmbedded  = '10.1.43'
  // test versions
  junit           = '5.13.3'
  junitPlatform   = '1.13.3'
  testcontainers  = '1.20.4'
}

configurations.configureEach {

  tasks.withType(Copy).configureEach {
    duplicatesStrategy 'exclude'
  }
}


// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

apply from: './gradle/suppress.gradle'
dependencyCheck {
  suppressionFile = 'config/owasp/suppressions.xml'
}

cucumberReports {
  outputDir = file("${projectDir}/target/cucumber")
  reports = files("${projectDir}/target/cucumber.json")
  notFailingStatuses = ["skipped", "passed"]
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
   url = 'https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1'
  }
}

ext.libraries = [
  junit5: [
    "org.junit.jupiter:junit-jupiter-api:${junit}",
    "org.junit.jupiter:junit-jupiter-engine:${junit}", 
    "org.junit.jupiter:junit-jupiter-params:${junit}",
    "org.junit.platform:junit-platform-commons:${junitPlatform}",
    "org.junit.platform:junit-platform-engine:${junitPlatform}",
    "org.apiguardian:apiguardian-api:1.1.2"
  ]
]

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.5"
  }
}

dependencies {

  // start::CVE Vulnerability dependency overrides                                                          // MAIN PARENT DEPENDEDNCY

  implementation group: 'ch.qos.logback', name: 'logback-classic', version: logback                         // logging-appinsights
  implementation group: 'ch.qos.logback', name: 'logback-core', version: logback                            // logging-appinsights
  implementation group: 'com.azure', name: 'azure-core', version: '1.55.5'                                  // azure-messaging-servicebus
  implementation group: 'com.azure', name: 'azure-core-amqp', version: '2.10.1'                              // azure-messaging-servicebus
  implementation group: 'com.azure', name: 'azure-core-http-netty', version: '1.15.13'                       // azure-messaging-servicebus
  implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.6.0'                    // idam-java-client
  implementation group: 'commons-io', name: 'commons-io', version: '2.19.0'                                  // idam-java-client
  implementation group: 'io.projectreactor.netty', name: 'reactor-netty-core', version: '1.2.7'            // azure-messaging-servicebus
  implementation group: 'io.projectreactor.netty', name: 'reactor-netty-http', version: '1.2.7'            // azure-messaging-servicebus
  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: tomcatEmbedded       // spring-boot-starter-web
  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-el', version: tomcatEmbedded         // spring-boot-starter-web
  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: tomcatEmbedded  // spring-boot-starter-web
  implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.17'                                   // spring-*
  implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: '2.0.17'                                // spring-*


  // end::CVE Vulnerability dependency overrides                                                            // MAIN PARENT DEPENDEDNCY

  // Spring
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
  implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.8.9'

  // HMCTS
  implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: '6.1.9'
  implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '5.3.3'
  implementation group: 'com.github.hmcts', name: 'idam-java-client', version: '3.0.4'

  // Jetty
  implementation group: 'org.eclipse.jetty', name: 'jetty-server', version: jetty
  implementation group: 'org.eclipse.jetty', name: 'jetty-alpn-client', version: jetty
  // implementation group: 'org.eclipse.jetty', name: 'jetty-continuation', version: jetty
  implementation group: 'org.eclipse.jetty', name: 'jetty-util', version: jetty
  implementation group: 'org.eclipse.jetty', name: 'jetty-util-ajax', version: jetty
  implementation group: 'org.eclipse.jetty', name: 'jetty-xml', version: jetty
  implementation group: 'org.eclipse.jetty', name: 'jetty-client', version: jetty
  implementation group: 'org.eclipse.jetty', name: 'jetty-security', version: jetty
  implementation group: 'org.eclipse.jetty', name: 'jetty-http', version: jetty
  implementation group: 'org.eclipse.jetty', name: 'jetty-io', version: jetty
  implementation group: 'org.eclipse.jetty.http3', name: 'jetty-http3-server', version: jetty
  implementation group: 'org.eclipse.jetty.http3', name: 'jetty-http3-common', version: jetty
  implementation group: 'org.eclipse.jetty.ee10', name: 'jetty-ee10-servlet', version: jetty
  implementation group: 'org.eclipse.jetty.ee10', name: 'jetty-ee10-servlets', version: jetty
  implementation group: 'org.eclipse.jetty.ee10', name: 'jetty-ee10-webapp', version: jetty
  implementation group: 'org.eclipse.jetty', name: 'jetty-proxy', version: jetty
  implementation group: 'org.eclipse.jetty', name: 'jetty-alpn-server', version: jetty
  implementation group: 'org.eclipse.jetty', name: 'jetty-alpn-conscrypt-server', version: jetty
  implementation group: 'org.eclipse.jetty', name: 'jetty-alpn-conscrypt-client', version: jetty


  implementation group: 'com.azure', name: 'azure-messaging-servicebus', version: '7.17.12'
  // implementation group: 'com.fasterxml.woodstox', name: 'woodstox-core', version: '6.4.0'
  implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.2.1'
  implementation group: 'jakarta.el', name: 'jakarta.el-api', version: '6.0.1'
  implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '8.1'
  implementation group: 'net.minidev', name: 'json-smart', version: '2.5.2'
  implementation group: 'org.projectlombok', name: 'lombok', version: lombok
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombok


  testImplementation libraries.junit5
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-contract-stub-runner', version: '4.3.0'
  testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.4.9', classifier: 'all'

  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath

  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath
  functionalTestImplementation group: 'com.github.hmcts', name: 'befta-fw', version: '9.2.4'
}

bootJar {
  getArchiveFileName().set(provider {
    'hmc-hmi-inbound-adapter.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

jar {
  enabled = false
}

wrapper {
  distributionType = Wrapper.DistributionType.ALL
}

task fortifyScan(type: JavaExec)  {
  mainClass = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}
